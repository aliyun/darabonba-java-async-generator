init(){}

model SelectObjectRequest {
  bucketName?: string(name='BucketName', position='Host'),
  objectName?: string(name='ObjectName', position='Path'),
  porcess?: string(name='Porcess', position='Query'),
  selectRequest?: {
    inputSerialization?: {
      compressionType?: string(name='CompressionType'),
      inputSerializationCSV?: {
        recordDelimiter?: string(name='RecordDelimiter'),
        range?: string(name='Range'),
        fieldDelimiter?: string(name='FieldDelimiter'),
        quoteCharacter?: string(name='QuoteCharacter'),
        commentCharacter?: string(name='CommentCharacter'),
        fileHeaderInfo?: string(name='FileHeaderInfo'),
      }(name='CSV'),
    }(name='InputSerialization'),
    expression?: string(name='Expression'),
    outputSerialization?: {
      outputSerializationCSV?: {
        recordDelimiter?: string(name='RecordDelimiter'),
        fieldDelimiter?: string(name='FieldDelimiter'),
      }(name='CSV'),
      outputRawData?: string(name='OutputRawData'),
      outputHeader?: string(name='OutputHeader'),
      enablePayloadCrc?: string(name='EnablePayloadCrc'),
      keepAllColumns?: string(name='KeepAllColumns'),
    }(name='OutputSerialization'),
    options?: {
      maxSkippedRecordsAllowed?: string(name='MaxSkippedRecordsAllowed'),
      skipPartialDataRecord?: string(name='SkipPartialDataRecord'),
    }(name='Options'),
  }(name='SelectRequest', position='Body'),
}

model UntagResourcesRequest {
  ownerAccount?: string(name='OwnerAccount', position='Query'),
  ownerId?: long(name='OwnerId', description='The ID of the RAM user.', position='Query'),
  regionId?: string(name='RegionId', description='The ID of the region to which the resource belongs. You can call [DescribeRegions](~~ 25609 ~~) to view the latest region list.', position='Query'),
  resourceType?: string(name='ResourceType', description='The definition of the resource type. Valid values:

-instance:ECS instance
-disk: disk
-snapshot: snapshot
-image: image
-securitygroup: Security Group
-volume: storage volume
-eni: eni
-ddh: Dedicated host
-ddhcluster: Dedicated host cluster
-keypair:SSH key pair
-launchtemplate: launch Template
-reservedinstance: Reserved Instance
-snapshotpolicy: automatic snapshot policy
-elasticityassurance: elastic assurance
-capacityreservation: capacity reservation', position='Query'),
  resourceOwnerId?: long(name='ResourceOwnerId', description='The ID of the resource master account, that is, the UID.', position='Query'),
  resourceOwnerAccount?: string(name='ResourceOwnerAccount', description='The account name of the resource master account.', position='Query'),
  resourceId?: [ string ](name='ResourceId', description='The ID of the resource. Valid values of N: 1 to 50.', position='Query'),
  all?: boolean(name='All', description='Specifies whether to unbind all tags from a resource. This parameter is valid only when TagKey.N is not set in the request. Valid values:
-true
-false

Default value: false', position='Query'),
  tagKey?: [ string ](name='TagKey', description='The tag key of the resource. Valid values of N: 1 to 20.', position='Query'),
}

model BatchCreateEtlMetaRequest {
  metaValue?: {
    a?: string(name='CreateTime')
  }(name='MetaValue', position='Body'),
}

model CreateEtlMetaRequest {
  etlMeta?: {
    metaValue?: {
      b?: string(name='CreateTime'),
    }(name='MetaValue'),
  }(name='EtlMeta', position='Query'),
}